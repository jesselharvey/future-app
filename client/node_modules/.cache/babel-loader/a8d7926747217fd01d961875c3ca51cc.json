{"ast":null,"code":"import axios from 'axios';\n\nclass Storage {\n  static getItem(key) {\n    return localStorage.getItem(key);\n  }\n\n  static setItem(key, value) {\n    return localStorage.setItem(key, value);\n  }\n\n  static removeItem(key) {\n    return localStorage.removeItem(key);\n  }\n\n}\n\nclass Request {\n  constructor(config = {}) {\n    this.request = (url, method, data) => {\n      const urlPath = this.prefix + url;\n      const token = Storage.getItem('authToken'); // TODO: check expiry\n\n      if (token) {\n        this.req.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      }\n\n      let prom;\n\n      if (data) {\n        prom = this.req[method](urlPath, data);\n      } else {\n        prom = this.req[method](urlPath);\n      }\n\n      return new Promise((res, rej) => {\n        prom.then(resp => {\n          res(resp);\n        }).catch(err => {\n          rej(err.response);\n        });\n      });\n    };\n\n    this.get = url => {\n      return this.request(url, 'get');\n    };\n\n    this.put = (url, data) => {\n      return this.request(url, 'put', data);\n    };\n\n    this.patch = (url, data) => {\n      return this.request(url, 'patch', data);\n    };\n\n    this.post = (url, data) => {\n      return this.request(url, 'post', data);\n    };\n\n    this.prefix = config.prefix || '/api';\n    this.req = axios.create({});\n  }\n\n}\n\nexport class AuthService {\n  static checkToken(token) {}\n\n}\n\nAuthService.login = (username, password) => {\n  const userToLogin = {\n    username: username,\n    password: password\n  };\n  return api.post('/login', userToLogin).then(resp => {\n    Storage.setItem('authToken', resp.data.token);\n    return resp;\n  });\n};\n\nAuthService.signup = (username, password) => {\n  const userToRegister = {\n    username: username,\n    password: password\n  };\n  return api.post('/registration', userToRegister);\n};\n\nAuthService.logout = () => {\n  return new Promise((res, rej) => {\n    Storage.removeItem('authToken');\n    res(true);\n  });\n};\n\nAuthService.isAuthenticated = () => !!Storage.getItem('authToken');\n\nconst api = new Request();\napi.login = AuthService.login;\napi.signup = AuthService.signup;\napi.logout = AuthService.logout;\nexport default api;","map":{"version":3,"sources":["/Users/punchcode/Desktop/class-projects/future/client/src/utils/request.js"],"names":["axios","Storage","getItem","key","localStorage","setItem","value","removeItem","Request","constructor","config","request","url","method","data","urlPath","prefix","token","req","defaults","headers","common","prom","Promise","res","rej","then","resp","catch","err","response","get","put","patch","post","create","AuthService","checkToken","login","username","password","userToLogin","api","signup","userToRegister","logout","isAuthenticated"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,CAAc;AACV,SAAOC,OAAP,CAAeC,GAAf,EAAoB;AAChB,WAAOC,YAAY,CAACF,OAAb,CAAqBC,GAArB,CAAP;AACH;;AAED,SAAOE,OAAP,CAAeF,GAAf,EAAoBG,KAApB,EAA2B;AACvB,WAAOF,YAAY,CAACC,OAAb,CAAqBF,GAArB,EAA0BG,KAA1B,CAAP;AACH;;AAED,SAAOC,UAAP,CAAkBJ,GAAlB,EAAuB;AACnB,WAAOC,YAAY,CAACG,UAAb,CAAwBJ,GAAxB,CAAP;AACH;;AAXS;;AAcd,MAAMK,OAAN,CAAc;AACVC,EAAAA,WAAW,CAACC,MAAM,GAAG,EAAV,EAAc;AAAA,SAKzBC,OALyB,GAKf,CAACC,GAAD,EAAMC,MAAN,EAAcC,IAAd,KAAuB;AAC7B,YAAMC,OAAO,GAAG,KAAKC,MAAL,GAAcJ,GAA9B;AACA,YAAMK,KAAK,GAAGhB,OAAO,CAACC,OAAR,CAAgB,WAAhB,CAAd,CAF6B,CAG7B;;AACA,UAAIe,KAAJ,EAAW;AACP,aAAKC,GAAL,CAASC,QAAT,CAAkBC,OAAlB,CAA0BC,MAA1B,CAAiC,eAAjC,IAAqD,UAASJ,KAAM,EAApE;AACH;;AACD,UAAIK,IAAJ;;AACA,UAAIR,IAAJ,EAAU;AACNQ,QAAAA,IAAI,GAAG,KAAKJ,GAAL,CAASL,MAAT,EAAiBE,OAAjB,EAA0BD,IAA1B,CAAP;AACH,OAFD,MAEO;AACHQ,QAAAA,IAAI,GAAG,KAAKJ,GAAL,CAASL,MAAT,EAAiBE,OAAjB,CAAP;AACH;;AACD,aAAO,IAAIQ,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC7BH,QAAAA,IAAI,CAACI,IAAL,CAAUC,IAAI,IAAI;AACdH,UAAAA,GAAG,CAACG,IAAD,CAAH;AACH,SAFD,EAEGC,KAFH,CAESC,GAAG,IAAI;AACZJ,UAAAA,GAAG,CAACI,GAAG,CAACC,QAAL,CAAH;AACH,SAJD;AAKH,OANM,CAAP;AAOH,KAzBwB;;AAAA,SA2BzBC,GA3ByB,GA2BlBnB,GAAD,IAAS;AACX,aAAO,KAAKD,OAAL,CAAaC,GAAb,EAAkB,KAAlB,CAAP;AACH,KA7BwB;;AAAA,SA+BzBoB,GA/ByB,GA+BnB,CAACpB,GAAD,EAAME,IAAN,KAAe;AACjB,aAAO,KAAKH,OAAL,CAAaC,GAAb,EAAkB,KAAlB,EAAyBE,IAAzB,CAAP;AACH,KAjCwB;;AAAA,SAmCzBmB,KAnCyB,GAmCjB,CAACrB,GAAD,EAAME,IAAN,KAAe;AACnB,aAAO,KAAKH,OAAL,CAAaC,GAAb,EAAkB,OAAlB,EAA2BE,IAA3B,CAAP;AACH,KArCwB;;AAAA,SAuCzBoB,IAvCyB,GAuClB,CAACtB,GAAD,EAAME,IAAN,KAAe;AAClB,aAAO,KAAKH,OAAL,CAAaC,GAAb,EAAkB,MAAlB,EAA0BE,IAA1B,CAAP;AACH,KAzCwB;;AACrB,SAAKE,MAAL,GAAcN,MAAM,CAACM,MAAP,IAAiB,MAA/B;AACA,SAAKE,GAAL,GAAWlB,KAAK,CAACmC,MAAN,CAAa,EAAb,CAAX;AACH;;AAJS;;AA6Cd,OAAO,MAAMC,WAAN,CAAkB;AA4BrB,SAAOC,UAAP,CAAkBpB,KAAlB,EAAyB,CAExB;;AA9BoB;;AAAZmB,W,CACFE,K,GAAQ,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACnC,QAAMC,WAAW,GAAG;AAChBF,IAAAA,QAAQ,EAAEA,QADM;AAEhBC,IAAAA,QAAQ,EAAEA;AAFM,GAApB;AAIA,SAAOE,GAAG,CAACR,IAAJ,CAAS,QAAT,EAAmBO,WAAnB,EACNf,IADM,CACDC,IAAI,IAAI;AACV1B,IAAAA,OAAO,CAACI,OAAR,CAAgB,WAAhB,EAA6BsB,IAAI,CAACb,IAAL,CAAUG,KAAvC;AACA,WAAOU,IAAP;AACH,GAJM,CAAP;AAKH,C;;AAXQS,W,CAaFO,M,GAAS,CAACJ,QAAD,EAAWC,QAAX,KAAwB;AACpC,QAAMI,cAAc,GAAG;AACnBL,IAAAA,QAAQ,EAAEA,QADS;AAEnBC,IAAAA,QAAQ,EAAEA;AAFS,GAAvB;AAIA,SAAOE,GAAG,CAACR,IAAJ,CAAS,eAAT,EAA0BU,cAA1B,CAAP;AACH,C;;AAnBQR,W,CAqBFS,M,GAAS,MAAM;AAClB,SAAO,IAAItB,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC7BxB,IAAAA,OAAO,CAACM,UAAR,CAAmB,WAAnB;AACAiB,IAAAA,GAAG,CAAC,IAAD,CAAH;AACH,GAHM,CAAP;AAIH,C;;AA1BQY,W,CAgCFU,e,GAAkB,MAAM,CAAC,CAAC7C,OAAO,CAACC,OAAR,CAAgB,WAAhB,C;;AAGrC,MAAMwC,GAAG,GAAG,IAAIlC,OAAJ,EAAZ;AACAkC,GAAG,CAACJ,KAAJ,GAAYF,WAAW,CAACE,KAAxB;AACAI,GAAG,CAACC,MAAJ,GAAaP,WAAW,CAACO,MAAzB;AACAD,GAAG,CAACG,MAAJ,GAAaT,WAAW,CAACS,MAAzB;AAEA,eAAeH,GAAf","sourcesContent":["import axios from 'axios'\n\nclass Storage {\n    static getItem(key) {\n        return localStorage.getItem(key)\n    }\n\n    static setItem(key, value) {\n        return localStorage.setItem(key, value)\n    }\n\n    static removeItem(key) {\n        return localStorage.removeItem(key)\n    }\n}\n\nclass Request {\n    constructor(config = {}) {\n        this.prefix = config.prefix || '/api'\n        this.req = axios.create({})\n    }\n\n    request = (url, method, data) => {\n        const urlPath = this.prefix + url\n        const token = Storage.getItem('authToken')\n        // TODO: check expiry\n        if (token) {\n            this.req.defaults.headers.common['Authorization'] = `Bearer ${token}`\n        }\n        let prom\n        if (data) {\n            prom = this.req[method](urlPath, data)\n        } else {\n            prom = this.req[method](urlPath)\n        }\n        return new Promise((res, rej) => {\n            prom.then(resp => {\n                res(resp)\n            }).catch(err => {\n                rej(err.response)\n            })\n        })\n    }\n\n    get = (url) => {\n        return this.request(url, 'get')\n    }\n\n    put = (url, data) => {\n        return this.request(url, 'put', data)\n    }\n\n    patch = (url, data) => {\n        return this.request(url, 'patch', data)\n    }\n\n    post = (url, data) => {\n        return this.request(url, 'post', data)\n    }\n}\n\nexport class AuthService {\n    static login = (username, password) => {\n        const userToLogin = {\n            username: username,\n            password: password\n        }\n        return api.post('/login', userToLogin)\n        .then(resp => {\n            Storage.setItem('authToken', resp.data.token)\n            return resp\n        })\n    }\n\n    static signup = (username, password) => {\n        const userToRegister = {\n            username: username,\n            password: password\n        }\n        return api.post('/registration', userToRegister)\n    }\n\n    static logout = () => {\n        return new Promise((res, rej) => {\n            Storage.removeItem('authToken')\n            res(true)\n        })\n    }\n\n    static checkToken(token) {\n        \n    }\n\n    static isAuthenticated = () => !!Storage.getItem('authToken')\n}\n\nconst api = new Request()\napi.login = AuthService.login\napi.signup = AuthService.signup\napi.logout = AuthService.logout\n\nexport default api"]},"metadata":{},"sourceType":"module"}